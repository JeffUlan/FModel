<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UwXmhiUAAAAASUVORK5CYII=
</value>
  </data>
</root>