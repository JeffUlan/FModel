<adonisControls:AdonisWindow x:Class="FModel.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:FModel"
        xmlns:controls="clr-namespace:FModel.Views.Resources.Controls"
        xmlns:converters="clr-namespace:FModel.Views.Resources.Converters"
        xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
        xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
        xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
        WindowStartupLocation="CenterScreen" Closing="OnClosing" Loaded="OnLoaded" PreviewKeyDown="OnWindowKeyDown"
        Height="{Binding Source={x:Static SystemParameters.MaximizedPrimaryScreenHeight}, Converter={converters:RatioConverter}, ConverterParameter='0.85'}"
        Width="{Binding Source={x:Static SystemParameters.MaximizedPrimaryScreenWidth}, Converter={converters:RatioConverter}, ConverterParameter='0.75'}">
    <adonisControls:AdonisWindow.Style>
        <Style TargetType="adonisControls:AdonisWindow" BasedOn="{StaticResource {x:Type adonisControls:AdonisWindow}}" >
            <Setter Property="Title" Value="FModel" />
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding DataContext.TitleExtra, RelativeSource={RelativeSource Self}, Converter={x:Static converters:IsNullToBoolReversedConverter.Instance}}"
                    Value="True">
                    <Setter Property="Title"
                            Value="{Binding DataContext.TitleExtra, RelativeSource={RelativeSource Self}, StringFormat={}FModel - {0}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </adonisControls:AdonisWindow.Style>
    <adonisControls:AdonisWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Views/Resources/Resources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </adonisControls:AdonisWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="{adonisUi:Space 1}" />
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0">
            <MenuItem Header="Directory">
                <MenuItem Header="Selector" Command="{Binding MenuCommand}" CommandParameter="Directory_Selector">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource DirectoryIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="AES" Command="{Binding MenuCommand}" CommandParameter="Directory_AES" IsEnabled="{Binding IsReady}">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource KeyIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Backup" Command="{Binding MenuCommand}" CommandParameter="Directory_Backup" IsEnabled="{Binding IsReady}">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource BackupIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Assets">
                <MenuItem Header="Search" IsEnabled="{Binding IsReady}" InputGestureText="Ctrl+Shift+F" Click="OnSearchViewClick">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource SearchIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Directories" ItemsSource="{Binding CustomDirectories.Directories}" IsEnabled="{Binding IsReady}">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource DirectoriesIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Export Data" Command="{Binding ExportDataCommand}" CommandParameter="{Binding SelectedItems, ElementName=AssetsListName}">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource ExportIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save Property" Command="{Binding SavePropertyCommand}" CommandParameter="{Binding SelectedItems, ElementName=AssetsListName}">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource SaveIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save Texture" Command="{Binding SaveTextureCommand}" CommandParameter="{Binding SelectedItems, ElementName=AssetsListName}">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource TextureIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Auto">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" Data="{StaticResource StatusBarIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                    <MenuItem Header="Export Data" IsCheckable="True" StaysOpenOnClick="True"
                              InputGestureText="{Binding AutoExportData, Source={x:Static local:Settings.UserSettings.Default}}"
                              IsChecked="{Binding IsAutoExportData, Source={x:Static local:Settings.UserSettings.Default}}" />
                    <MenuItem Header="Save Properties" IsCheckable="True" StaysOpenOnClick="True"
                              InputGestureText="{Binding AutoSaveProps, Source={x:Static local:Settings.UserSettings.Default}}"
                              IsChecked="{Binding IsAutoSaveProps, Source={x:Static local:Settings.UserSettings.Default}}" />
                    <MenuItem Header="Save Textures" IsCheckable="True" StaysOpenOnClick="True"
                              InputGestureText="{Binding AutoSaveTextures, Source={x:Static local:Settings.UserSettings.Default}}"
                              IsChecked="{Binding IsAutoSaveTextures, Source={x:Static local:Settings.UserSettings.Default}}" />
                    <!--<MenuItem Header="Save Meshes" IsCheckable="True" StaysOpenOnClick="True"
                              InputGestureText="{Binding AutoSaveMeshes, Source={x:Static local:Settings.UserSettings.Default}}"
                              IsChecked="{Binding IsAutoSaveMeshes, Source={x:Static local:Settings.UserSettings.Default}}" />-->
                    <MenuItem Header="Save Materials" IsCheckable="True" StaysOpenOnClick="True"
                              InputGestureText="{Binding AutoSaveMaterials, Source={x:Static local:Settings.UserSettings.Default}}"
                              IsChecked="{Binding IsAutoSaveMaterials, Source={x:Static local:Settings.UserSettings.Default}}" />
                    <MenuItem Header="Open Sounds" IsCheckable="True" StaysOpenOnClick="True"
                              InputGestureText="{Binding AutoOpenSounds, Source={x:Static local:Settings.UserSettings.Default}}"
                              IsChecked="{Binding IsAutoOpenSounds, Source={x:Static local:Settings.UserSettings.Default}}" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Views">
                <MenuItem Header="Audio Player" Command="{Binding MenuCommand}" CommandParameter="Views_AudioPlayer">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" Data="{StaticResource AudioIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Map Viewer" Command="{Binding MenuCommand}" CommandParameter="Views_MapViewer" IsEnabled="{Binding IsReady}">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" Data="{StaticResource MapIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                    <MenuItem.Style>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CUE4Parse.Game}" Value="{x:Static local:FGame.FortniteGame}">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <MenuItem Header="Image Merger" Command="{Binding MenuCommand}" CommandParameter="Views_ImageMerger">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" Data="{StaticResource ImageMergerIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Settings" Command="{Binding MenuCommand}" CommandParameter="Settings" />
            <MenuItem Header="Help" >
                <MenuItem Header="Donate" Command="{Binding MenuCommand}" CommandParameter="Help_Donate">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" Data="{StaticResource GiftIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Changelog" Command="{Binding MenuCommand}" CommandParameter="Help_Changelog">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" Data="{StaticResource GitHubIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Bugs Report" Command="{Binding MenuCommand}" CommandParameter="Help_BugsReport">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" Data="{StaticResource BugIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Discord Server" Command="{Binding MenuCommand}" CommandParameter="Help_Discord">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" Data="{StaticResource DiscordIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="About FModel" Command="{Binding MenuCommand}" CommandParameter="Help_About">
                    <MenuItem.Icon>
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" Data="{StaticResource InfoIcon}" />
                            </Canvas>
                        </Viewbox>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <Grid x:Name="RootGrid" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="400" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <GroupBox Grid.Column="0" adonisExtensions:LayerExtension.Layer="2"
                      Padding="{adonisUi:Space 0}" Background="Transparent">
                <TabControl x:Name="LeftTabControl" SelectionChanged="OnTabItemChange">
                    <TabItem Style="{StaticResource TabItemFillSpace}" Header="Directory">
                        <DockPanel>
                            <Grid DockPanel.Dock="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="5" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Loading Mode" VerticalAlignment="Center" />
                                <ComboBox Grid.Row="0" Grid.Column="2" ItemsSource="{Binding LoadingModes.Modes}" IsEnabled="{Binding IsReady}"
                                          SelectedItem="{Binding LoadingMode, Source={x:Static local:Settings.UserSettings.Default}, Mode=TwoWay}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={x:Static converters:EnumToStringConverter.Instance}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Content="Load"
                                        Command="{Binding LoadingModes.LoadCommand}" IsEnabled="{Binding IsReady}"
                                        CommandParameter="{Binding SelectedItems, ElementName=DirectoryFilesListBox}" />
                            </Grid>
                            <Grid DockPanel.Dock="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Separator Grid.Row="0" Style="{StaticResource CustomSeparator}" Tag="GAME DIRECTORY" />
                                <ListBox Grid.Row="1" x:Name="DirectoryFilesListBox" Style="{StaticResource DirectoryFilesListBox}" MouseDoubleClick="OnMouseDoubleClick" />
                                <Separator Grid.Row="2" Style="{StaticResource CustomSeparator}" Tag="INFORMATION" />
                                <StackPanel Grid.Row="3" Orientation="Vertical" Margin="0 0 0 5">
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding SelectedItem.MountPoint, ElementName=DirectoryFilesListBox, FallbackValue='/', Converter={x:Static converters:TrimRightToLeftConverter.Instance}, ConverterParameter=275}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="Mount Point" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding SelectedItem.FileCount, ElementName=DirectoryFilesListBox, FallbackValue='0', StringFormat={}{0} Files}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="File Count" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding SelectedItem.IsEncrypted, ElementName=DirectoryFilesListBox, FallbackValue='False'}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="2" Grid.Column="1" Text="Is Encrypted" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="{Binding SelectedItem.Guid, ElementName=DirectoryFilesListBox, FallbackValue='00000000000000000000000000000000'}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="3" Grid.Column="1" Text="Global Unique Identifier" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </TabItem>
                    <TabItem Style="{StaticResource TabItemFillSpace}" Header="Folders">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Top" TextAlignment="Center" TextWrapping="Wrap" HorizontalAlignment="Center" MaxWidth="375"
                                       Text="Open folders to navigate through your loaded files. Badges indicate how many assets are in the folder. To better optimize things, it is recommended to use your hotkeys, to quickly switch between tabs." />
                            <Grid DockPanel.Dock="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Separator Grid.Row="0" Style="{StaticResource CustomSeparator}" />
                                <TreeView Grid.Row="1" x:Name="AssetsFolderName" Style="{StaticResource AssetsFolderTreeView}" PreviewMouseDoubleClick="OnAssetsTreeMouseDoubleClick">
                                    <TreeView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Extract Folder's Assets" Click="OnFolderExtractClick">
                                                <MenuItem.Icon>
                                                    <Viewbox Width="16" Height="16">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource ExtractIcon}" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Export Folder's Assets Data" Click="OnFolderExportClick">
                                                <MenuItem.Icon>
                                                    <Viewbox Width="16" Height="16">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource ExportIcon}" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Save Folder's Assets Properties" Click="OnFolderSaveClick">
                                                <MenuItem.Icon>
                                                    <Viewbox Width="16" Height="16">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource SaveIcon}" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <Separator />
                                            <MenuItem Header="Save Directory" Click="OnSaveDirectoryClick">
                                                <MenuItem.Icon>
                                                    <Viewbox Width="16" Height="16">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource DirectoriesAddIcon}" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Copy Directory Path" Click="OnCopyDirectoryPathClick">
                                                <MenuItem.Icon>
                                                    <Viewbox Width="16" Height="16">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource CopyIcon}" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </TreeView.ContextMenu>
                                </TreeView>
                                <Separator Grid.Row="2" Style="{StaticResource CustomSeparator}" Tag="INFORMATION" />
                                <StackPanel Grid.Row="3" Orientation="Vertical" Margin="0 0 0 5">
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding SelectedItem.AssetsList.Assets.Count, ElementName=AssetsFolderName, FallbackValue=0}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="Assets Count" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding SelectedItem.FoldersView.Count, ElementName=AssetsFolderName, FallbackValue=0}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="Folders Count" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding SelectedItem.Package, ElementName=AssetsFolderName, FallbackValue='None'}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="2" Grid.Column="1" Text="Included In Package" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="{Binding SelectedItem.MountPoint, ElementName=AssetsFolderName, FallbackValue='/', Converter={x:Static converters:TrimRightToLeftConverter.Instance}, ConverterParameter=275}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="3" Grid.Column="1" Text="Package Mount Point" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                        <TextBlock Grid.Row="4" Grid.Column="0" Text="{Binding SelectedItem.Version, ElementName=AssetsFolderName, FallbackValue='VER_UE4_LATEST', Converter={x:Static converters:TrimRightToLeftConverter.Instance}, ConverterParameter=275}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="4" Grid.Column="1" Text="Package Version" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </TabItem>
                    <TabItem Style="{StaticResource TabItemFillSpace}"
                             Header="{Binding SelectedItem.AssetsList.Assets.Count, FallbackValue=0, ElementName=AssetsFolderName}"
                             HeaderStringFormat="{}{0} Assets">
                        <DockPanel>
                            <Grid DockPanel.Dock="Top" ZIndex="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                
                                <Grid Grid.Column="0" ZIndex="1" HorizontalAlignment="Left" Margin="5 2 0 0">
                                    <Viewbox Width="16" Height="16">
                                        <Canvas Width="24" Height="24">
                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource SearchIcon}" />
                                        </Canvas>
                                    </Viewbox>
                                </Grid>
                                <TextBox Grid.Column="0" Grid.ColumnSpan="2" x:Name="AssetsSearchName" AcceptsTab="False" AcceptsReturn="False"
                                         Padding="25 0 0 0" HorizontalAlignment="Stretch" TextChanged="OnFilterTextChanged"
                                         adonisExtensions:WatermarkExtension.Watermark="Search by name..." />
                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                    <Button ToolTip="Clear Search Filter" Padding="5" Style="{DynamicResource {x:Static adonisUi:Styles.ToolbarButton}}" Click="OnDeleteSearchClick">
                                        <Viewbox Width="16" Height="16" HorizontalAlignment="Center">
                                            <Canvas Width="24" Height="24">
                                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource BackspaceIcon}"/>
                                            </Canvas>
                                        </Viewbox>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <Grid DockPanel.Dock="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Separator Grid.Row="0" Style="{StaticResource CustomSeparator}"
                                           Tag="{Binding SelectedItem.Header, ElementName=AssetsFolderName, FallbackValue='ASSETS LIST', Converter={x:Static converters:FolderToSeparatorTagConverter.Instance}}" />
                                <ListBox Grid.Row="1" x:Name="AssetsListName" Style="{StaticResource AssetsListBox}" PreviewMouseDoubleClick="OnAssetsListMouseDoubleClick">
                                    <ListBox.ContextMenu>
                                        <ContextMenu DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="Extract in New Tab" Command="{Binding DataContext.ExtractNewTabCommand}" CommandParameter="{Binding SelectedItems}">
                                                <MenuItem.Icon>
                                                    <Viewbox Width="16" Height="16">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource ExtractIcon}" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Export Data" Command="{Binding DataContext.ExportDataCommand}" CommandParameter="{Binding SelectedItems}">
                                                <MenuItem.Icon>
                                                    <Viewbox Width="16" Height="16">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource ExportIcon}" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Save Properties" Command="{Binding DataContext.SavePropertyCommand}" CommandParameter="{Binding SelectedItems}">
                                                <MenuItem.Icon>
                                                    <Viewbox Width="16" Height="16">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource SaveIcon}" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Save Texture" Command="{Binding DataContext.SaveTextureCommand}" CommandParameter="{Binding SelectedItems}">
                                                <MenuItem.Icon>
                                                    <Viewbox Width="16" Height="16">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource TextureIcon}" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <Separator />
                                            <MenuItem Header="Copy">
                                                <MenuItem.Icon>
                                                    <Viewbox Width="16" Height="16">
                                                        <Canvas Width="24" Height="24">
                                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource CopyIcon}" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </MenuItem.Icon>
                                                <MenuItem Header="File Path" Command="{Binding DataContext.CopyCommand}">
                                                    <MenuItem.CommandParameter>
                                                        <MultiBinding Converter="{x:Static converters:MultiParameterConverter.Instance}">
                                                            <Binding Source="File_Path" />
                                                            <Binding Path="SelectedItems" />
                                                        </MultiBinding>
                                                    </MenuItem.CommandParameter>
                                                </MenuItem>
                                                <MenuItem Header="File Name" Command="{Binding DataContext.CopyCommand}">
                                                    <MenuItem.CommandParameter>
                                                        <MultiBinding Converter="{x:Static converters:MultiParameterConverter.Instance}">
                                                            <Binding Source="File_Name" />
                                                            <Binding Path="SelectedItems" />
                                                        </MultiBinding>
                                                    </MenuItem.CommandParameter>
                                                </MenuItem>
                                                <MenuItem Header="Directory Path" Command="{Binding DataContext.CopyCommand}">
                                                    <MenuItem.CommandParameter>
                                                        <MultiBinding Converter="{x:Static converters:MultiParameterConverter.Instance}">
                                                            <Binding Source="Directory_Path" />
                                                            <Binding Path="SelectedItems" />
                                                        </MultiBinding>
                                                    </MenuItem.CommandParameter>
                                                </MenuItem>
                                                <MenuItem Header="File Path w/o Extension" Command="{Binding DataContext.CopyCommand}">
                                                    <MenuItem.CommandParameter>
                                                        <MultiBinding Converter="{x:Static converters:MultiParameterConverter.Instance}">
                                                            <Binding Source="File_Path_No_Extension" />
                                                            <Binding Path="SelectedItems" />
                                                        </MultiBinding>
                                                    </MenuItem.CommandParameter>
                                                </MenuItem>
                                                <MenuItem Header="File Name w/o Extension" Command="{Binding DataContext.CopyCommand}">
                                                    <MenuItem.CommandParameter>
                                                        <MultiBinding Converter="{x:Static converters:MultiParameterConverter.Instance}">
                                                            <Binding Source="File_Name_No_Extension" />
                                                            <Binding Path="SelectedItems" />
                                                        </MultiBinding>
                                                    </MenuItem.CommandParameter>
                                                </MenuItem>
                                            </MenuItem>
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                </ListBox>
                                <Separator Grid.Row="2" Style="{StaticResource CustomSeparator}" Tag="INFORMATION" />
                                <StackPanel Grid.Row="3" Orientation="Vertical" Margin="0 0 0 5">
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding SelectedItem.Offset, ElementName=AssetsListName, FallbackValue=0, StringFormat='{}0x{0:X}'}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="Offset" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding SelectedItem.Size, ElementName=AssetsListName, FallbackValue=0, Converter={x:Static converters:SizeToStringConverter.Instance}}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="Size" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding SelectedItem.Compression, ElementName=AssetsListName, FallbackValue='Unknown'}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="2" Grid.Column="1" Text="Compression Method" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="{Binding SelectedItem.IsEncrypted, ElementName=AssetsListName, FallbackValue='False'}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="3" Grid.Column="1" Text="Is Encrypted" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                        <TextBlock Grid.Row="4" Grid.Column="0" Text="{Binding SelectedItem.Package, ElementName=AssetsListName, FallbackValue='None'}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        <TextBlock Grid.Row="4" Grid.Column="1" Text="Included In Package" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </DockPanel>
                    </TabItem>
                </TabControl>
            </GroupBox>

            <GridSplitter Grid.Column="1" ResizeDirection="Columns" Width="4" VerticalAlignment="Stretch"
                          ResizeBehavior="PreviousAndNext" MouseDoubleClick="OnGridSplitterDoubleClick"
                          Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}" />

            <GroupBox Grid.Column="2" adonisExtensions:LayerExtension.Layer="2"
                      Padding="{adonisUi:Space 0}" Background="Transparent">
                <Grid Margin="0 0 3 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    
                    <TabControl Grid.Row="0" x:Name="TabControlName" Style="{StaticResource GameFilesTabControl}" />
                    <Expander Grid.Row="1" Margin="0 5 0 5" ExpandDirection="Down">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="2" />
                                <ColumnDefinition Width="24" />
                            </Grid.ColumnDefinitions>
                            
                            <controls:CustomRichTextBox Grid.Column="0" Grid.ColumnSpan="3" x:Name="LogRtbName" Style="{StaticResource CustomRichTextBox}" />
                            <StackPanel Grid.Column="2" Orientation="Vertical" VerticalAlignment="Bottom" Margin="-5 -5 5 5">
                                <Button Style="{DynamicResource {x:Static adonisUi:Styles.ToolbarButton}}" ToolTip="Open Output Folder" Padding="0,4,0,4"
                                        Command="{Binding MenuCommand}" CommandParameter="ToolBox_Open_Output_Directory">
                                    <Viewbox Width="16" Height="16" HorizontalAlignment="Center">
                                        <Canvas Width="24" Height="24">
                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource FolderIcon}" />
                                        </Canvas>
                                    </Viewbox>
                                </Button>
                                <Button Style="{DynamicResource {x:Static adonisUi:Styles.ToolbarButton}}" ToolTip="Clear Logs" Padding="0,4,0,4"
                                        Command="{Binding MenuCommand}" CommandParameter="ToolBox_Clear_Logs">
                                    <Viewbox Width="16" Height="16" HorizontalAlignment="Center">
                                        <Canvas Width="24" Height="24">
                                            <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Data="{StaticResource TrashIcon}"/>
                                        </Canvas>
                                    </Viewbox>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Expander>
                </Grid>
            </GroupBox>
        </Grid>

        <StatusBar Grid.Row="3" MinHeight="28" MaxHeight="28"
                   adonisExtensions:LayerExtension.Layer="3">
            <StatusBar.Style>
                <Style TargetType="{x:Type StatusBar}" BasedOn="{StaticResource {x:Type StatusBar}}">
                    <Style.Triggers>
                        <!--don't mind me, MultiDataTrigger just sucks-->
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static local:EStatusKind.Ready}">
                            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
                            <Setter Property="Foreground" Value="White" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static local:EStatusKind.Completed}">
                            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
                            <Setter Property="Foreground" Value="White" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static local:EStatusKind.Loading}">
                            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" />
                            <Setter Property="Foreground" Value="White" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static local:EStatusKind.Stopping}">
                            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.AlertBrush}}" />
                            <Setter Property="Foreground" Value="White" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static local:EStatusKind.Stopped}">
                            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                            <Setter Property="Foreground" Value="White" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="{x:Static local:EStatusKind.Failed}">
                            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                            <Setter Property="Foreground" Value="White" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StatusChangeAttempted, Source={x:Static local:Services.ApplicationService.ThreadWorkerView}}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Duration="0:0:0.8">
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(StatusBar.Background).(SolidColorBrush.Color)" FillBehavior="Stop">
                                            <ColorAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#CE5555" />
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.2" Value="#C22B2B" />
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.4" Value="#CE5555" />
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.6" Value="#C22B2B" />
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.8" Value="#CE5555" />
                                            </ColorAnimationUsingKeyFrames.KeyFrames>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OperationCancelled, Source={x:Static local:Services.ApplicationService.ThreadWorkerView}}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Duration="0:0:1">
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(StatusBar.Background).(SolidColorBrush.Color)" FillBehavior="Stop">
                                            <ColorAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#C22B2B" />
                                                <DiscreteColorKeyFrame KeyTime="0:0:1" Value="#CE5555" />
                                            </ColorAnimationUsingKeyFrames.KeyFrames>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StatusBar.Style>

            <StatusBarItem Margin="5,0,0,0" >
                <TextBlock>
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{Binding Status}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="{x:Static local:EStatusKind.Loading}">
                                    <Setter Property="Text" Value="{Binding Status, StringFormat='{}{0} …'}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding CanBeCanceled, Source={x:Static local:Services.ApplicationService.ThreadWorkerView}}" Value="True" />
                                        <Condition Binding="{Binding Status}" Value="{x:Static local:EStatusKind.Loading}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Text" Value="{Binding Status, StringFormat='{}{0} …    ESC to Cancel'}" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StatusBarItem>

            <StatusBarItem Margin="0 0 5 0" HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <StatusBarItem Margin="0 0 10 0" HorizontalContentAlignment="Stretch">
                        <Viewbox Width="16" Height="16">
                            <Canvas Width="24" Height="24">
                                <Path Fill="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" Data="{StaticResource StatusBarIcon}" />
                            </Canvas>
                        </Viewbox>
                    </StatusBarItem>

                    <StatusBarItem Width="30" HorizontalContentAlignment="Stretch" ToolTip="Auto Export Data Enabled">
                        <StatusBarItem.Style>
                            <Style TargetType="StatusBarItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAutoExportData, Source={x:Static local:Settings.UserSettings.Default}}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StatusBarItem.Style>
                        <TextBlock HorizontalAlignment="Center" FontWeight="SemiBold" Text="DTA" />
                    </StatusBarItem>

                    <StatusBarItem Width="30" HorizontalContentAlignment="Stretch" ToolTip="Auto Save Properties Enabled">
                        <StatusBarItem.Style>
                            <Style TargetType="StatusBarItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAutoSaveProps, Source={x:Static local:Settings.UserSettings.Default}}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StatusBarItem.Style>
                        <TextBlock HorizontalAlignment="Center" FontWeight="SemiBold" Text="PRP" />
                    </StatusBarItem>

                    <StatusBarItem Width="30" HorizontalContentAlignment="Stretch" ToolTip="Auto Save Textures Enabled">
                        <StatusBarItem.Style>
                            <Style TargetType="StatusBarItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAutoSaveTextures, Source={x:Static local:Settings.UserSettings.Default}}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StatusBarItem.Style>
                        <TextBlock HorizontalAlignment="Center" FontWeight="SemiBold" Text="TEX" />
                    </StatusBarItem>
                    
                    <StatusBarItem Width="30" HorizontalContentAlignment="Stretch" ToolTip="Auto Save Materials Enabled">
                        <StatusBarItem.Style>
                            <Style TargetType="StatusBarItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAutoSaveMaterials, Source={x:Static local:Settings.UserSettings.Default}}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StatusBarItem.Style>
                        <TextBlock HorizontalAlignment="Center" FontWeight="SemiBold" Text="MAT" />
                    </StatusBarItem>
                    
                    <StatusBarItem Width="30" HorizontalContentAlignment="Stretch" ToolTip="Auto Save Meshes Enabled">
                        <StatusBarItem.Style>
                            <Style TargetType="StatusBarItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAutoSaveMeshes, Source={x:Static local:Settings.UserSettings.Default}}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StatusBarItem.Style>
                        <TextBlock HorizontalAlignment="Center" FontWeight="SemiBold" Text="MSH" />
                    </StatusBarItem>

                    <StatusBarItem Width="30" HorizontalContentAlignment="Stretch" ToolTip="Auto Open Sounds Enabled">
                        <StatusBarItem.Style>
                            <Style TargetType="StatusBarItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAutoOpenSounds, Source={x:Static local:Settings.UserSettings.Default}}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StatusBarItem.Style>
                        <TextBlock HorizontalAlignment="Center" FontWeight="SemiBold" Text="SND" />
                    </StatusBarItem>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</adonisControls:AdonisWindow>
